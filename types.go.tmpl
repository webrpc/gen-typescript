{{define "types"}}

{{- $typeMap := .TypeMap -}}

//
// Types
//

{{- if .Messages -}}
{{range .Messages -}}

{{if .Type | isEnumType -}}
{{$enumName := .Name}}
export enum {{$enumName}} {
{{- range $i, $field := .Fields}}
  {{- if $i}},{{end}}
  {{$field.Name}} = '{{$field.Name}}'
{{- end}}
}
{{end -}}

{{- if .Type | isStructType  }}
export interface {{.Name}} {
  {{- range .Fields}}
  {{- $isExportable := true -}}
  {{- range $meta := .Meta -}}
      {{- if eq (printf "%v" (get $meta "json")) "-" -}}
        {{- $isExportable = false}}
      {{- end -}}
  {{- end }}
  {{if $isExportable -}}{{template "fieldName" dict "Field" .}}{{if .Optional}}?{{end}}: {{template "type" dict "Type" .Type "TypeMap" $typeMap}}{{- end -}}
  {{- end}}
}
{{end -}}
{{end -}}
{{end -}}

{{if .Services}}
{{- range .Services}}
export interface {{.Name}} {
{{- range $_, $method := .Methods}}
  {{firstLetterToLower .Name}}({{template "methodInputs" dict "Method" . "TypeMap" $typeMap}}): Promise<{{$method.Name}}Return>
{{- end}}
}

{{range .Methods -}}
export interface {{.Name}}Args {
{{- range .Inputs}}
  {{.Name}}{{if .Optional}}?{{end}}: {{template "type" dict "Type" .Type "TypeMap" $typeMap}}
{{- end}}
}

export interface {{.Name}}Return {
{{- range .Outputs}}
  {{.Name}}{{if .Optional}}?{{end}}: {{template "type" dict "Type" .Type "TypeMap" $typeMap}}
{{- end}}  
}
{{end}}

{{- end}}
{{end -}}

{{end}}
